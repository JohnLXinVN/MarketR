"use client";

import { useRouter, usePathname } from "next/navigation";
import { useEffect, useState } from "react";
import { useUser } from "../contexts/UserContext";
import api from "../utils/api";

export default function AuthGuard({ children }) {
  const router = useRouter();
  const pathname = usePathname();
  //üí° Th√™m state isVerified ƒë·ªÉ theo d√µi tr·∫°ng th√°i x√°c th·ª±c th√†nh c√¥ng
  const [isVerified, setIsVerified] = useState(false);
  const { setUser } = useUser();

  useEffect(() => {
    const checkAuthAndFetchUser = async () => {
      // N·∫øu ƒëang ·ªü trang login, kh√¥ng c·∫ßn ki·ªÉm tra, coi nh∆∞ "x√°c th·ª±c" th√†nh c√¥ng ƒë·ªÉ hi·ªÉn th·ªã trang
      if (pathname === "/login") {
        setIsVerified(true);
        return;
      }

      const token = localStorage.getItem("access_token");
      const exp = localStorage.getItem("access_token_exp");

      if (!token || !exp || Date.now() >= parseInt(exp) * 1000) {
        localStorage.removeItem("access_token");
        localStorage.removeItem("access_token_exp");
        setUser(null);
        router.replace("/login");
        // Kh√¥ng set isVerified, ƒë·ªÉ n√≥ v·∫´n l√† false
        return;
      }

      try {
        const response = await api.get("/auth/me");
        setUser(response.data);
        // Ch·ªâ khi l·∫•y th√¥ng tin user th√†nh c√¥ng, ch√∫ng ta m·ªõi set isVerified th√†nh true
        setIsVerified(true);
      } catch (error) {
        console.error(
          "L·ªói khi l·∫•y th√¥ng tin user, c√≥ th·ªÉ token kh√¥ng h·ª£p l·ªá ph√≠a server:",
          error
        );
        localStorage.removeItem("access_token");
        localStorage.removeItem("access_token_exp");
        setUser(null);
        router.replace("/login");
        // Kh√¥ng set isVerified, ƒë·ªÉ n√≥ v·∫´n l√† false
      }
    };

    checkAuthAndFetchUser();
  }, [pathname, router, setUser]);

  // Ch·ªâ hi·ªÉn th·ªã spinner n·∫øu ch∆∞a x√°c th·ª±c xong
  if (!isVerified) {
    return (
      <div className="absolute inset-0 bg-black/70 flex items-center justify-center z-50 rounded-md">
        <div className="w-10 h-10 border-4 border-white border-t-transparent rounded-full animate-spin"></div>
      </div>
    );
  }

  // Ch·ªâ hi·ªÉn th·ªã children khi isVerified l√† true
  return <>{children}</>;
}
